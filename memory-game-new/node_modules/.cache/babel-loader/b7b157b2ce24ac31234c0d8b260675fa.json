{"ast":null,"code":"var _jsxFileName = \"/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/components/CardGrid2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './CardGrid.css';\nimport Card from \"./Card\";\nimport cover from \"../assets/img/cover.png\";\nimport ring from \"../assets/img/ring-1.png\";\nimport potion from \"../assets/img/potion-1.png\";\nimport shield from \"../assets/img/shield-1.png\";\nimport sword from \"../assets/img/sword-1.png\"; //import {Images} from \"./ImageProvider\";\n//import {shuffleCard} from \"./CardUtil\";\n//const shuffledCards = shuffleCard([...Images]);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffledCards = [ring, potion, shield, sword, ring, potion, shield, sword];\n\nconst CardGrid2 = () => {\n  _s();\n\n  const [selectedCard, setSelectedCard] = useState(-1);\n  const [card0, setCard0] = useState(false);\n  const [card1, setCard1] = useState(false);\n  const [card2, setCard2] = useState(false);\n  const [card3, setCard3] = useState(false);\n  const [card4, setCard4] = useState(false);\n  const [card5, setCard5] = useState(false);\n  const [card6, setCard6] = useState(false);\n  const [card7, setCard7] = useState(false);\n  const [guessCount, setGuessCount] = useState(0);\n\n  const handleCardClick = cardIndex => {\n    console.log(`Card of Index: ${cardIndex} was clicked`);\n\n    if (selectedCard !== -1) {\n      if (shuffledCards[cardIndex] === shuffledCards[selectedCard] && cardIndex !== selectedCard) {\n        console.log('Guess was right');\n        return;\n      }\n\n      flipCards(selectedCard, cardIndex);\n      setGuessCount(guessCount + 1);\n      console.log('Guess was wrong, counter increase by 1');\n      setSelectedCard(-1);\n      return;\n    }\n\n    setSelectedCard(cardIndex);\n  };\n\n  const flipCards = (selectedCard, cardIndex) => {\n    [selectedCard, cardIndex].forEach(index => {\n      switch (index) {\n        case 0:\n          setCard0(!card0);\n\n        case 1:\n          setCard1(!card1);\n\n        case 2:\n          setCard2(!card2);\n\n        case 3:\n          setCard3(!card3);\n\n        case 4:\n          setCard4(!card4);\n\n        case 5:\n          setCard5(!card5);\n\n        case 6:\n          setCard6(!card6);\n\n        case 7:\n          setCard7(!card7);\n\n        default:\n          console.log('Unknown Index');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        index: 0,\n        handleCardClick: handleCardClick,\n        flipCard: card0,\n        backImage: cover,\n        frontImage: ring\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        index: 1,\n        handleCardClick: handleCardClick,\n        flipCard: card1,\n        backImage: cover,\n        frontImage: sword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        index: 2,\n        handleCardClick: handleCardClick,\n        flipCard: card2,\n        backImage: cover,\n        frontImage: shield\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        index: 3,\n        handleCardClick: handleCardClick,\n        flipCard: card3,\n        backImage: cover,\n        frontImage: potion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        index: 4,\n        handleCardClick: handleCardClick,\n        flipCard: card4,\n        backImage: cover,\n        frontImage: ring\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        index: 5,\n        handleCardClick: handleCardClick,\n        flipCard: card5,\n        backImage: cover,\n        frontImage: sword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        index: 6,\n        handleCardClick: handleCardClick,\n        flipCard: card6,\n        backImage: cover,\n        frontImage: shield\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        index: 7,\n        handleCardClick: handleCardClick,\n        flipCard: card7,\n        backImage: cover,\n        frontImage: potion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardGrid2, \"m+ZAJgSBiWa/W2WP/1j9GvefVrc=\");\n\n_c = CardGrid2;\nexport default CardGrid2;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGrid2\");","map":{"version":3,"names":["React","useState","Card","cover","ring","potion","shield","sword","shuffledCards","CardGrid2","selectedCard","setSelectedCard","card0","setCard0","card1","setCard1","card2","setCard2","card3","setCard3","card4","setCard4","card5","setCard5","card6","setCard6","card7","setCard7","guessCount","setGuessCount","handleCardClick","cardIndex","console","log","flipCards","forEach","index"],"sources":["/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/components/CardGrid2.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './CardGrid.css';\nimport Card from \"./Card\";\nimport cover from \"../assets/img/cover.png\";\nimport ring from \"../assets/img/ring-1.png\";\nimport potion from \"../assets/img/potion-1.png\";\nimport shield from \"../assets/img/shield-1.png\";\nimport sword from \"../assets/img/sword-1.png\";\n//import {Images} from \"./ImageProvider\";\n//import {shuffleCard} from \"./CardUtil\";\n\n//const shuffledCards = shuffleCard([...Images]);\nconst shuffledCards = [\n    ring,\n    potion,\n    shield,\n    sword,\n    ring,\n    potion,\n    shield,\n    sword,\n];\n\n\nconst CardGrid2 = () => {\n\n    const [selectedCard, setSelectedCard] = useState(-1);\n    const [card0, setCard0] = useState(false);\n    const [card1, setCard1] = useState(false);\n    const [card2, setCard2] = useState(false);\n    const [card3, setCard3] = useState(false);\n    const [card4, setCard4] = useState(false);\n    const [card5, setCard5] = useState(false);\n    const [card6, setCard6] = useState(false);\n    const [card7, setCard7] = useState(false);\n\n    const[guessCount, setGuessCount] = useState(0);\n\n    const handleCardClick = (cardIndex) => {\n        console.log(`Card of Index: ${cardIndex} was clicked`);\n        if (selectedCard !== -1) {\n            if (shuffledCards[cardIndex] === shuffledCards[selectedCard]\n                && cardIndex !== selectedCard\n            ) {\n                console.log('Guess was right');\n                return;\n            }\n\n            flipCards(selectedCard,cardIndex);\n            setGuessCount( guessCount + 1);\n            console.log('Guess was wrong, counter increase by 1');\n            setSelectedCard(-1);\n            return;\n        }\n\n        setSelectedCard(cardIndex);\n    }\n\n    const flipCards = (selectedCard,cardIndex) => {\n        [selectedCard, cardIndex].forEach(\n            index => {\n                switch (index) {\n                    case 0: setCard0(!card0);\n                    case 1: setCard1(!card1);\n                    case 2: setCard2(!card2);\n                    case 3: setCard3(!card3);\n                    case 4: setCard4(!card4);\n                    case 5: setCard5(!card5);\n                    case 6: setCard6(!card6);\n                    case 7: setCard7(!card7);\n                    default: console.log('Unknown Index');\n                }\n            }\n        );\n    }\n\n    return(\n        <div className=\"card-grid\">\n            <div className=\"row\">\n                <Card\n                    index={0}\n                    handleCardClick={handleCardClick}\n                    flipCard={card0}\n                    backImage={cover}\n                    frontImage={ring}\n                />\n                <Card\n                    index={1}\n                    handleCardClick={handleCardClick}\n                    flipCard={card1}\n                    backImage={cover}\n                    frontImage={sword}\n                />\n                <Card\n                    index={2}\n                    handleCardClick={handleCardClick}\n                    flipCard={card2}\n                    backImage={cover}\n                    frontImage={shield}\n                />\n                <Card\n                    index={3}\n                    handleCardClick={handleCardClick}\n                    flipCard={card3}\n                    backImage={cover}\n                    frontImage={potion}\n                />\n                <Card\n                    index={4}\n                    handleCardClick={handleCardClick}\n                    flipCard={card4}\n                    backImage={cover}\n                    frontImage={ring}\n                />\n                <Card\n                    index={5}\n                    handleCardClick={handleCardClick}\n                    flipCard={card5}\n                    backImage={cover}\n                    frontImage={sword}\n                />\n                <Card\n                    index={6}\n                    handleCardClick={handleCardClick}\n                    flipCard={card6}\n                    backImage={cover}\n                    frontImage={shield}\n                />\n                <Card\n                    index={7}\n                    handleCardClick={handleCardClick}\n                    flipCard={card7}\n                    backImage={cover}\n                    frontImage={potion}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default CardGrid2;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB,C,CACA;AACA;AAEA;;;AACA,MAAMC,aAAa,GAAG,CAClBJ,IADkB,EAElBC,MAFkB,EAGlBC,MAHkB,EAIlBC,KAJkB,EAKlBH,IALkB,EAMlBC,MANkB,EAOlBC,MAPkB,EAQlBC,KARkB,CAAtB;;AAYA,MAAME,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAAC,CAAF,CAAhD;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,KAAD,CAAlC;EAEA,MAAK,CAAC2B,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAAC,CAAD,CAA3C;;EAEA,MAAM6B,eAAe,GAAIC,SAAD,IAAe;IACnCC,OAAO,CAACC,GAAR,CAAa,kBAAiBF,SAAU,cAAxC;;IACA,IAAIrB,YAAY,KAAK,CAAC,CAAtB,EAAyB;MACrB,IAAIF,aAAa,CAACuB,SAAD,CAAb,KAA6BvB,aAAa,CAACE,YAAD,CAA1C,IACGqB,SAAS,KAAKrB,YADrB,EAEE;QACEsB,OAAO,CAACC,GAAR,CAAY,iBAAZ;QACA;MACH;;MAEDC,SAAS,CAACxB,YAAD,EAAcqB,SAAd,CAAT;MACAF,aAAa,CAAED,UAAU,GAAG,CAAf,CAAb;MACAI,OAAO,CAACC,GAAR,CAAY,wCAAZ;MACAtB,eAAe,CAAC,CAAC,CAAF,CAAf;MACA;IACH;;IAEDA,eAAe,CAACoB,SAAD,CAAf;EACH,CAlBD;;EAoBA,MAAMG,SAAS,GAAG,CAACxB,YAAD,EAAcqB,SAAd,KAA4B;IAC1C,CAACrB,YAAD,EAAeqB,SAAf,EAA0BI,OAA1B,CACIC,KAAK,IAAI;MACL,QAAQA,KAAR;QACI,KAAK,CAAL;UAAQvB,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR,KAAK,CAAL;UAAQG,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR,KAAK,CAAL;UAAQG,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR,KAAK,CAAL;UAAQG,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR,KAAK,CAAL;UAAQG,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR,KAAK,CAAL;UAAQG,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR,KAAK,CAAL;UAAQG,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR,KAAK,CAAL;UAAQG,QAAQ,CAAC,CAACD,KAAF,CAAR;;QACR;UAASM,OAAO,CAACC,GAAR,CAAY,eAAZ;MATb;IAWH,CAbL;EAeH,CAhBD;;EAkBA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAEH,eAFrB;QAGI,QAAQ,EAAElB,KAHd;QAII,SAAS,EAAET,KAJf;QAKI,UAAU,EAAEC;MALhB;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAE0B,eAFrB;QAGI,QAAQ,EAAEhB,KAHd;QAII,SAAS,EAAEX,KAJf;QAKI,UAAU,EAAEI;MALhB;QAAA;QAAA;QAAA;MAAA,QARJ,eAeI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAEuB,eAFrB;QAGI,QAAQ,EAAEd,KAHd;QAII,SAAS,EAAEb,KAJf;QAKI,UAAU,EAAEG;MALhB;QAAA;QAAA;QAAA;MAAA,QAfJ,eAsBI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAEwB,eAFrB;QAGI,QAAQ,EAAEZ,KAHd;QAII,SAAS,EAAEf,KAJf;QAKI,UAAU,EAAEE;MALhB;QAAA;QAAA;QAAA;MAAA,QAtBJ,eA6BI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAEyB,eAFrB;QAGI,QAAQ,EAAEV,KAHd;QAII,SAAS,EAAEjB,KAJf;QAKI,UAAU,EAAEC;MALhB;QAAA;QAAA;QAAA;MAAA,QA7BJ,eAoCI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAE0B,eAFrB;QAGI,QAAQ,EAAER,KAHd;QAII,SAAS,EAAEnB,KAJf;QAKI,UAAU,EAAEI;MALhB;QAAA;QAAA;QAAA;MAAA,QApCJ,eA2CI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAEuB,eAFrB;QAGI,QAAQ,EAAEN,KAHd;QAII,SAAS,EAAErB,KAJf;QAKI,UAAU,EAAEG;MALhB;QAAA;QAAA;QAAA;MAAA,QA3CJ,eAkDI,QAAC,IAAD;QACI,KAAK,EAAE,CADX;QAEI,eAAe,EAAEwB,eAFrB;QAGI,QAAQ,EAAEJ,KAHd;QAII,SAAS,EAAEvB,KAJf;QAKI,UAAU,EAAEE;MALhB;QAAA;QAAA;QAAA;MAAA,QAlDJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA8DH,CAlHD;;GAAMI,S;;KAAAA,S;AAoHN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}