{"ast":null,"code":"var _jsxFileName = \"/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/components/CardGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useEffect, useRef, useState } from 'react';\nimport Card from \"./Card\";\nimport cover from \"../assets/img/cover.png\";\nimport './CardGrid.css';\nimport { shuffleCard } from \"./CardUtil\";\nimport { Images } from \"./ImageProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffledCards = shuffleCard([...Images, ...Images]);\nconsole.log('shuffledCards: ', shuffledCards);\n\nconst CardGrid = () => {\n  _s();\n\n  const [flipCards, setFlipCards] = useState([]);\n  const [firstCardSelectedIndex, setFirstCardSelectedIndex] = useState(null);\n  const rightGuess = useRef([]);\n  const reRendered = useRef(0);\n  useEffect(() => {\n    setFlipCards(flipCards);\n  }, []);\n\n  const handleCardClick = clickedCardIndex => {\n    console.log('Click function Called');\n\n    if (firstCardSelectedIndex != null) {\n      if (shuffledCards[firstCardSelectedIndex] === shuffledCards[clickedCardIndex] && firstCardSelectedIndex !== clickedCardIndex) {\n        rightGuess.current.push(firstCardSelectedIndex);\n        rightGuess.current.push(clickedCardIndex);\n        console.log('Clicked Cards have the same image');\n      } //setTurnCardsOver;\n\n\n      console.log('resetting firstCardSelectedIndex');\n      setFirstCardSelectedIndex(null);\n      return;\n    }\n\n    setFirstCardSelectedIndex(clickedCardIndex);\n  }; // const turnCardsOver = () => {\n  //\n  // }\n\n\n  console.log('rightGuess.current: ', rightGuess.current); //console.log('firstCardSelectedIndex ', firstCardSelectedIndex);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: shuffledCards.map((image, index) => /*#__PURE__*/_jsxDEV(Card, {\n        index: index,\n        handleCardClick: handleCardClick,\n        flipCard: flipCards[index],\n        backImage: cover,\n        frontImage: image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Re-rendered: \", reRendered + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardGrid, \"eEgEv5u4bjmWOEvknUa/1Nz4Kis=\");\n\n_c = CardGrid;\nexport default CardGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","createRef","useEffect","useRef","useState","Card","cover","shuffleCard","Images","shuffledCards","console","log","CardGrid","flipCards","setFlipCards","firstCardSelectedIndex","setFirstCardSelectedIndex","rightGuess","reRendered","handleCardClick","clickedCardIndex","current","push","map","image","index"],"sources":["/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/components/CardGrid.js"],"sourcesContent":["import React, {createRef, useEffect, useRef, useState} from 'react';\nimport Card from \"./Card\";\nimport cover from \"../assets/img/cover.png\";\n\nimport './CardGrid.css';\nimport {shuffleCard} from \"./CardUtil\";\nimport {Images} from \"./ImageProvider\";\n\nconst shuffledCards = shuffleCard([...Images, ...Images]);\nconsole.log('shuffledCards: ', shuffledCards);\n\n\nconst CardGrid = () => {\n\n    const [flipCards, setFlipCards] = useState([]);\n    const [firstCardSelectedIndex, setFirstCardSelectedIndex] = useState(null);\n    const rightGuess = useRef([]);\n    const reRendered = useRef(0);\n\n    useEffect(() => {\n        setFlipCards(\n            flipCards\n        );\n    }, []);\n\n    const handleCardClick = (clickedCardIndex) => {\n        console.log('Click function Called');\n        if (firstCardSelectedIndex != null) {\n\n            if(shuffledCards[firstCardSelectedIndex] === shuffledCards[clickedCardIndex] &&\n                firstCardSelectedIndex !== clickedCardIndex)\n            {\n                rightGuess.current.push(firstCardSelectedIndex);\n                rightGuess.current.push(clickedCardIndex);\n                console.log('Clicked Cards have the same image');\n            }\n\n            //setTurnCardsOver;\n            console.log('resetting firstCardSelectedIndex');\n            setFirstCardSelectedIndex(null);\n            return;\n        }\n\n        setFirstCardSelectedIndex(clickedCardIndex);\n    }\n\n    // const turnCardsOver = () => {\n    //\n    // }\n\n    console.log('rightGuess.current: ', rightGuess.current);\n    //console.log('firstCardSelectedIndex ', firstCardSelectedIndex);\n\n    return (\n        <div className=\"card-grid\">\n            <div className=\"row\">\n                {shuffledCards.map((image, index) => (\n                    <Card\n                        key={index}\n                        index={index}\n                        handleCardClick={handleCardClick}\n                        flipCard={flipCards[index]}\n                        backImage={cover}\n                        frontImage={image} />\n                ))}\n            </div>\n            <p>Re-rendered: {reRendered + 1}</p>\n        </div>\n    );\n};\n\nexport default CardGrid;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,QAA7C,QAA4D,OAA5D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAO,gBAAP;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAAC,CAAC,GAAGC,MAAJ,EAAY,GAAGA,MAAf,CAAD,CAAjC;AACAE,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,aAA/B;;AAGA,MAAMG,QAAQ,GAAG,MAAM;EAAA;;EAEnB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACW,sBAAD,EAAyBC,yBAAzB,IAAsDZ,QAAQ,CAAC,IAAD,CAApE;EACA,MAAMa,UAAU,GAAGd,MAAM,CAAC,EAAD,CAAzB;EACA,MAAMe,UAAU,GAAGf,MAAM,CAAC,CAAD,CAAzB;EAEAD,SAAS,CAAC,MAAM;IACZY,YAAY,CACRD,SADQ,CAAZ;EAGH,CAJQ,EAIN,EAJM,CAAT;;EAMA,MAAMM,eAAe,GAAIC,gBAAD,IAAsB;IAC1CV,OAAO,CAACC,GAAR,CAAY,uBAAZ;;IACA,IAAII,sBAAsB,IAAI,IAA9B,EAAoC;MAEhC,IAAGN,aAAa,CAACM,sBAAD,CAAb,KAA0CN,aAAa,CAACW,gBAAD,CAAvD,IACCL,sBAAsB,KAAKK,gBAD/B,EAEA;QACIH,UAAU,CAACI,OAAX,CAAmBC,IAAnB,CAAwBP,sBAAxB;QACAE,UAAU,CAACI,OAAX,CAAmBC,IAAnB,CAAwBF,gBAAxB;QACAV,OAAO,CAACC,GAAR,CAAY,mCAAZ;MACH,CAR+B,CAUhC;;;MACAD,OAAO,CAACC,GAAR,CAAY,kCAAZ;MACAK,yBAAyB,CAAC,IAAD,CAAzB;MACA;IACH;;IAEDA,yBAAyB,CAACI,gBAAD,CAAzB;EACH,CAnBD,CAbmB,CAkCnB;EACA;EACA;;;EAEAV,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCM,UAAU,CAACI,OAA/C,EAtCmB,CAuCnB;;EAEA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAK,SAAS,EAAC,KAAf;MAAA,UACKZ,aAAa,CAACc,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,kBACf,QAAC,IAAD;QAEI,KAAK,EAAEA,KAFX;QAGI,eAAe,EAAEN,eAHrB;QAII,QAAQ,EAAEN,SAAS,CAACY,KAAD,CAJvB;QAKI,SAAS,EAAEnB,KALf;QAMI,UAAU,EAAEkB;MANhB,GACSC,KADT;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAYI;MAAA,4BAAiBP,UAAU,GAAG,CAA9B;IAAA;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAzDD;;GAAMN,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}