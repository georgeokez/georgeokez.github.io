{"ast":null,"code":"var _jsxFileName = \"/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/components/CardGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useEffect, useRef, useState } from 'react';\nimport Card from \"./Card\";\nimport cover from \"../assets/img/cover.png\";\nimport './CardGrid.css';\nimport { shuffleCard } from \"./CardUtil\";\nimport { Images } from \"./ImageProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffledCards = shuffleCard([...Images, ...Images]);\n\nconst CardGrid = () => {\n  _s();\n\n  const [flipCard, setFlipCard] = useState(false);\n  const [firstCardSelectedIndex, setFirstCardSelectedIndex] = useState(null);\n\n  const handleCardClick = clickedCardIndex => {\n    if (firstCardSelectedIndex) {\n      if (shuffledCards[firstCardSelectedIndex] === shuffledCards[clickedCardIndex]) {\n        console.log('Clicked Cards have the same image');\n      }\n\n      setFirstCardSelectedIndex(null);\n      return;\n    }\n\n    setFirstCardSelectedIndex(clickedCardIndex);\n  };\n\n  const turnCardsOver = (firstCardSelected, clickedCardIndex) => {};\n\n  console.log('shuffledCards: ', shuffledCards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: shuffledCards.map((image, index) => /*#__PURE__*/_jsxDEV(Card, {\n        index: index,\n        handleCardClick: handleCardClick,\n        flipCard: flipCard,\n        backImage: cover,\n        frontImage: image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardGrid, \"Ur7vg5jGlPaOXhdWvioEKoaUqWg=\");\n\n_c = CardGrid;\nexport default CardGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","createRef","useEffect","useRef","useState","Card","cover","shuffleCard","Images","shuffledCards","CardGrid","flipCard","setFlipCard","firstCardSelectedIndex","setFirstCardSelectedIndex","handleCardClick","clickedCardIndex","console","log","turnCardsOver","firstCardSelected","map","image","index"],"sources":["/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/components/CardGrid.js"],"sourcesContent":["import React, {createRef, useEffect, useRef, useState} from 'react';\nimport Card from \"./Card\";\nimport cover from \"../assets/img/cover.png\";\n\nimport './CardGrid.css';\nimport {shuffleCard} from \"./CardUtil\";\nimport {Images} from \"./ImageProvider\";\n\nconst shuffledCards = shuffleCard([...Images, ...Images]);\n\nconst CardGrid = () => {\n\n    const [flipCard, setFlipCard] = useState(false);\n    const [firstCardSelectedIndex, setFirstCardSelectedIndex] = useState(null);\n\n    const handleCardClick = (clickedCardIndex) => {\n        if (firstCardSelectedIndex) {\n\n            if(shuffledCards[firstCardSelectedIndex] === shuffledCards[clickedCardIndex]) {\n                console.log('Clicked Cards have the same image');\n            }\n\n            setFirstCardSelectedIndex(null);\n            return;\n        }\n\n        setFirstCardSelectedIndex(clickedCardIndex);\n    }\n\n    const turnCardsOver = (firstCardSelected, clickedCardIndex) => {\n\n    }\n\n    console.log('shuffledCards: ', shuffledCards);\n\n    return (\n        <div className=\"card-grid\">\n            <div className=\"row\">\n                {shuffledCards.map((image, index) => (\n                    <Card\n                        key={index}\n                        index={index}\n                        handleCardClick={handleCardClick}\n                        flipCard={flipCard}\n                        backImage={cover}\n                        frontImage={image} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default CardGrid;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,QAA7C,QAA4D,OAA5D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAO,gBAAP;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAAC,CAAC,GAAGC,MAAJ,EAAY,GAAGA,MAAf,CAAD,CAAjC;;AAEA,MAAME,QAAQ,GAAG,MAAM;EAAA;;EAEnB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACS,sBAAD,EAAyBC,yBAAzB,IAAsDV,QAAQ,CAAC,IAAD,CAApE;;EAEA,MAAMW,eAAe,GAAIC,gBAAD,IAAsB;IAC1C,IAAIH,sBAAJ,EAA4B;MAExB,IAAGJ,aAAa,CAACI,sBAAD,CAAb,KAA0CJ,aAAa,CAACO,gBAAD,CAA1D,EAA8E;QAC1EC,OAAO,CAACC,GAAR,CAAY,mCAAZ;MACH;;MAEDJ,yBAAyB,CAAC,IAAD,CAAzB;MACA;IACH;;IAEDA,yBAAyB,CAACE,gBAAD,CAAzB;EACH,CAZD;;EAcA,MAAMG,aAAa,GAAG,CAACC,iBAAD,EAAoBJ,gBAApB,KAAyC,CAE9D,CAFD;;EAIAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,aAA/B;EAEA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,UACKA,aAAa,CAACY,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,kBACf,QAAC,IAAD;QAEI,KAAK,EAAEA,KAFX;QAGI,eAAe,EAAER,eAHrB;QAII,QAAQ,EAAEJ,QAJd;QAKI,SAAS,EAAEL,KALf;QAMI,UAAU,EAAEgB;MANhB,GACSC,KADT;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAxCD;;GAAMb,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}