{"ast":null,"code":"var _jsxFileName = \"/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/App.js\";\nimport React from 'react';\nimport CardGrid from \"./components/CardGrid\";\nimport { shuffleCard } from \"./components/CardUtil\";\nimport { Images } from \"./components/ImageProvider\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // const [shuffledCardImage, setShuffledCardImage] = useState(shuffleCard([...Images, ...Images]));\n  const shuffledCardImage = shuffleCard([...Images, ...Images]);\n\n  const handleClick = () => {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardGrid, {\n      shuffledCardImage: shuffledCardImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CardGrid","shuffleCard","Images","App","shuffledCardImage","handleClick","window","location","reload"],"sources":["/Users/george_okez/Software_Projects/Courses/net_ninja/react_n_redux/memory-game/memory-game/src/App.js"],"sourcesContent":["import React from 'react';\nimport CardGrid from \"./components/CardGrid\";\nimport {shuffleCard} from \"./components/CardUtil\";\nimport {Images} from \"./components/ImageProvider\";\n\nimport './App.css';\n\nconst App = () => {\n   // const [shuffledCardImage, setShuffledCardImage] = useState(shuffleCard([...Images, ...Images]));\n    const shuffledCardImage = shuffleCard([...Images, ...Images]);\n\n    const handleClick = () => {\n        window.location.reload();\n    };\n\n  return (\n    <div className=\"App\">\n        <h2>Magic Match</h2>\n        <button onClick={handleClick}>New Game</button>\n        <CardGrid shuffledCardImage={shuffledCardImage} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,MAAR,QAAqB,4BAArB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EACf;EACC,MAAMC,iBAAiB,GAAGH,WAAW,CAAC,CAAC,GAAGC,MAAJ,EAAY,GAAGA,MAAf,CAAD,CAArC;;EAEA,MAAMG,WAAW,GAAG,MAAM;IACtBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACH,CAFD;;EAIF,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEH,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,QAAD;MAAU,iBAAiB,EAAED;IAA7B;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAfD;;KAAMD,G;AAiBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}